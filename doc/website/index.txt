.. -*- mode: rst -*-

==================================================
 PyMVPA - Multivariate Pattern Analysis in Python
==================================================


Pie ... what?
-------------

PyMVPA is a Python_ module intended to ease pattern classification
analyses of large datasets. It provides high-level abstraction of typical
processing steps and a number of implementations of some popular algorithms.
While it is not limited to neuroimaging data it is eminently suited for such
datasets. PyMVPA is truely free software (in every respect) and additonally
requires nothing but free-software to run. Theoretically PyMVPA should run
on anything that can run a Python_ interpreter, although the proof is yet to
come.

.. _Python: http://www.python.org

PyMVPA stands for **M**\ ulti\ **V**\ ariate **P**\ attern **A**\ nalysis
in **Py**\ thon.

To learn how to use PyMVPA it is best to start with the manual_. It explains
the basic concepts of the module and shows examples of a typical workflow.
The `API documentation`_  on the other hand provides comprehensive information
about all functionality included in PyMVPA.

If you want to contribute some code to PyMVPA you might also want to have a
look at some (few) `developer guidelines`_ to make your code fit nicely into
the PyMVPA codebase.

.. _Manual: manual.html
.. _API Documentation: api/index.html
.. _developer guidelines: devguide.html

PyMVPA is developed inside the `Debian Experimental Psychology Project`_. This
website, the source code repository and download services are hosted on 
Alioth_, which is kindly provided by the `Debian project`_.

.. _Debian Experimental Psychology Project: http://pkg-exppsy.alioth.debian.org
.. _Alioth: http://alioth.debian.org
.. _Debian project: http://www.debian.org



Legal stuff
-----------

PyMVPA is free-software (beer and speech) and covered by the `MIT License`_.
This applies to all source code, documentation, examples and snippets inside
the source distribution (including this website).

Please see the `appendix of the manual`_ for the copyright statement and the
full text of the license.

.. _MIT License: http://www.opensource.org/licenses/mit-license.php
.. _appendix of the manual: manual.html#license



Download
--------

Source code
~~~~~~~~~~~

Source code tarballs of PyMVPA releases are available from `download area`_.

.. _download area: files/

To get access to both the full PyMVPA history and the latest
development code the PyMVPA Git_ repository is publicly available. To view the
repository, please point your webbrowser to gitweb:
http://git.debian.org/?p=pkg-exppsy/pymvpa.git

To clone (aka checkout) the PyMVPA repository simply do:

::

  git clone git://git.debian.org/git/pkg-exppsy/pymvpa.git

After a short while you will have a `pymvpa` directory below your current
working directory, that contains the PyMVPA repository.

.. _Git: http://git.or.cz/


Binary packages
~~~~~~~~~~~~~~~

Binary packages are not available yet, but will be when the first release of
PyMVPA has happened. And there will be a Debian_ package of course.

.. _Debian: http://www.debian.org



Installation
------------

If you use a distribution-specific package, please install PyMVPA like any
other package. For Debian simply do:

::

  aptitude install python-mvpa


If you install from source use the Python way: Extract the downloaded source
distribution and enter the top-level folder. From there invoke:

::

  python setup.py install

.. Confirm that it actually works like this ;-)

.. Do we want to provide information on how to install on Windows? This
   requires mingw32 to build SVM module, plus installed nifti and libsvm
   libraries. It is unlikely that anyone already has them.
   Do we want to the evil and provide static libs somewhere or better stick
   to DevPaks for win32? Michael already made DevPak for libnifti -- maybe
   do it again for PyMVPA?


