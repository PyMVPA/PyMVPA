* Add support for topology support for stuff other than dense mask matrices,
  e.g. meshes.
* Hide libsvm interface from user and provide a unique classifier for linear
  SVM.
* (features selected on all folds)/(features selected on any fold)

* Regression tests: for instance using sample dataset which we have
   already, run doc/examples/searchlight.py and store output to
   validate against. Probably the best would be to create a regression
   test suite within unit tests which would load the dataset and run
   various algorithms on it a verify the results against previousely
   obtained (and dumped to the disk)

* confirm with Michael and refactor:

* for yarik: 

  verify on 'bad' searchlight that we get the same 'wrong' results and
   compare the performance time-wise

  refactor code so getNSamplesPerAttr returns a dictionary (not just numbers)

  maskmapper -- profile selectOut and see if alternative
   implementation will be faster. Also add removeOut  

  

* For anyone (possible useful ideas):

  provide for Dataset -- Dataset.__featattr which has attributes for
   features similar to __dsattr way.

 maskmapper:
  dsshape -> inShape
  nfeatures -> outSize

 in  --> data         -> dataShape
 out --> features     -> 

