* Add support for topology support for stuff other than dense mask matrices,
  e.g. meshes.
* Hide libsvm interface from user and provide a unique classifier for linear
  SVM.
* (features selected on all folds)/(features selected on any fold)

* each module should start with a docstring describing the module
   (which is not inside the hashed-comment of each file)
  look at mapper or neighbor for tentative organization if copyright/license
  has to be present in each file.

* Regression tests: for instance using sample dataset which we have
   already, run doc/examples/searchlight.py and store output to
   validate against. Probably the best would be to create a regression
   test suite within unit tests which would load the dataset and run
   various algorithms on it a verify the results against previousely
   obtained (and dumped to the disk)

* confirm with Michael and refactor:

 maskmapper:
  dsshape -> inShape
  nfeatures -> outSize

 in  --> data         -> dataShape
 out --> features     -> 

