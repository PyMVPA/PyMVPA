# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_svmc', [dirname(__file__)])
        except ImportError:
            import _svmc
            return _svmc
        if fp is not None:
            try:
                _mod = imp.load_module('_svmc', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _svmc = swig_import_helper()
    del swig_import_helper
else:
    import _svmc
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


__version__ = _svmc.__version__
C_SVC = _svmc.C_SVC
NU_SVC = _svmc.NU_SVC
ONE_CLASS = _svmc.ONE_CLASS
EPSILON_SVR = _svmc.EPSILON_SVR
NU_SVR = _svmc.NU_SVR
LINEAR = _svmc.LINEAR
POLY = _svmc.POLY
RBF = _svmc.RBF
SIGMOID = _svmc.SIGMOID
PRECOMPUTED = _svmc.PRECOMPUTED
class svm_parameter(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, svm_parameter, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, svm_parameter, name)
    __repr__ = _swig_repr
    __swig_setmethods__["svm_type"] = _svmc.svm_parameter_svm_type_set
    __swig_getmethods__["svm_type"] = _svmc.svm_parameter_svm_type_get
    if _newclass:svm_type = _swig_property(_svmc.svm_parameter_svm_type_get, _svmc.svm_parameter_svm_type_set)
    __swig_setmethods__["kernel_type"] = _svmc.svm_parameter_kernel_type_set
    __swig_getmethods__["kernel_type"] = _svmc.svm_parameter_kernel_type_get
    if _newclass:kernel_type = _swig_property(_svmc.svm_parameter_kernel_type_get, _svmc.svm_parameter_kernel_type_set)
    __swig_setmethods__["degree"] = _svmc.svm_parameter_degree_set
    __swig_getmethods__["degree"] = _svmc.svm_parameter_degree_get
    if _newclass:degree = _swig_property(_svmc.svm_parameter_degree_get, _svmc.svm_parameter_degree_set)
    __swig_setmethods__["gamma"] = _svmc.svm_parameter_gamma_set
    __swig_getmethods__["gamma"] = _svmc.svm_parameter_gamma_get
    if _newclass:gamma = _swig_property(_svmc.svm_parameter_gamma_get, _svmc.svm_parameter_gamma_set)
    __swig_setmethods__["coef0"] = _svmc.svm_parameter_coef0_set
    __swig_getmethods__["coef0"] = _svmc.svm_parameter_coef0_get
    if _newclass:coef0 = _swig_property(_svmc.svm_parameter_coef0_get, _svmc.svm_parameter_coef0_set)
    __swig_setmethods__["cache_size"] = _svmc.svm_parameter_cache_size_set
    __swig_getmethods__["cache_size"] = _svmc.svm_parameter_cache_size_get
    if _newclass:cache_size = _swig_property(_svmc.svm_parameter_cache_size_get, _svmc.svm_parameter_cache_size_set)
    __swig_setmethods__["eps"] = _svmc.svm_parameter_eps_set
    __swig_getmethods__["eps"] = _svmc.svm_parameter_eps_get
    if _newclass:eps = _swig_property(_svmc.svm_parameter_eps_get, _svmc.svm_parameter_eps_set)
    __swig_setmethods__["C"] = _svmc.svm_parameter_C_set
    __swig_getmethods__["C"] = _svmc.svm_parameter_C_get
    if _newclass:C = _swig_property(_svmc.svm_parameter_C_get, _svmc.svm_parameter_C_set)
    __swig_setmethods__["nr_weight"] = _svmc.svm_parameter_nr_weight_set
    __swig_getmethods__["nr_weight"] = _svmc.svm_parameter_nr_weight_get
    if _newclass:nr_weight = _swig_property(_svmc.svm_parameter_nr_weight_get, _svmc.svm_parameter_nr_weight_set)
    __swig_setmethods__["weight_label"] = _svmc.svm_parameter_weight_label_set
    __swig_getmethods__["weight_label"] = _svmc.svm_parameter_weight_label_get
    if _newclass:weight_label = _swig_property(_svmc.svm_parameter_weight_label_get, _svmc.svm_parameter_weight_label_set)
    __swig_setmethods__["weight"] = _svmc.svm_parameter_weight_set
    __swig_getmethods__["weight"] = _svmc.svm_parameter_weight_get
    if _newclass:weight = _swig_property(_svmc.svm_parameter_weight_get, _svmc.svm_parameter_weight_set)
    __swig_setmethods__["nu"] = _svmc.svm_parameter_nu_set
    __swig_getmethods__["nu"] = _svmc.svm_parameter_nu_get
    if _newclass:nu = _swig_property(_svmc.svm_parameter_nu_get, _svmc.svm_parameter_nu_set)
    __swig_setmethods__["p"] = _svmc.svm_parameter_p_set
    __swig_getmethods__["p"] = _svmc.svm_parameter_p_get
    if _newclass:p = _swig_property(_svmc.svm_parameter_p_get, _svmc.svm_parameter_p_set)
    __swig_setmethods__["shrinking"] = _svmc.svm_parameter_shrinking_set
    __swig_getmethods__["shrinking"] = _svmc.svm_parameter_shrinking_get
    if _newclass:shrinking = _swig_property(_svmc.svm_parameter_shrinking_get, _svmc.svm_parameter_shrinking_set)
    __swig_setmethods__["probability"] = _svmc.svm_parameter_probability_set
    __swig_getmethods__["probability"] = _svmc.svm_parameter_probability_get
    if _newclass:probability = _swig_property(_svmc.svm_parameter_probability_get, _svmc.svm_parameter_probability_set)
    def __init__(self): 
        this = _svmc.new_svm_parameter()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _svmc.delete_svm_parameter
    __del__ = lambda self : None;
svm_parameter_swigregister = _svmc.svm_parameter_swigregister
svm_parameter_swigregister(svm_parameter)

class svm_problem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, svm_problem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, svm_problem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["l"] = _svmc.svm_problem_l_set
    __swig_getmethods__["l"] = _svmc.svm_problem_l_get
    if _newclass:l = _swig_property(_svmc.svm_problem_l_get, _svmc.svm_problem_l_set)
    __swig_setmethods__["y"] = _svmc.svm_problem_y_set
    __swig_getmethods__["y"] = _svmc.svm_problem_y_get
    if _newclass:y = _swig_property(_svmc.svm_problem_y_get, _svmc.svm_problem_y_set)
    __swig_setmethods__["x"] = _svmc.svm_problem_x_set
    __swig_getmethods__["x"] = _svmc.svm_problem_x_get
    if _newclass:x = _swig_property(_svmc.svm_problem_x_get, _svmc.svm_problem_x_set)
    def __init__(self): 
        this = _svmc.new_svm_problem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _svmc.delete_svm_problem
    __del__ = lambda self : None;
svm_problem_swigregister = _svmc.svm_problem_swigregister
svm_problem_swigregister(svm_problem)

class svm_model(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, svm_model, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, svm_model, name)
    __repr__ = _swig_repr
    __swig_setmethods__["param"] = _svmc.svm_model_param_set
    __swig_getmethods__["param"] = _svmc.svm_model_param_get
    if _newclass:param = _swig_property(_svmc.svm_model_param_get, _svmc.svm_model_param_set)
    __swig_setmethods__["nr_class"] = _svmc.svm_model_nr_class_set
    __swig_getmethods__["nr_class"] = _svmc.svm_model_nr_class_get
    if _newclass:nr_class = _swig_property(_svmc.svm_model_nr_class_get, _svmc.svm_model_nr_class_set)
    __swig_setmethods__["l"] = _svmc.svm_model_l_set
    __swig_getmethods__["l"] = _svmc.svm_model_l_get
    if _newclass:l = _swig_property(_svmc.svm_model_l_get, _svmc.svm_model_l_set)
    __swig_setmethods__["SV"] = _svmc.svm_model_SV_set
    __swig_getmethods__["SV"] = _svmc.svm_model_SV_get
    if _newclass:SV = _swig_property(_svmc.svm_model_SV_get, _svmc.svm_model_SV_set)
    __swig_setmethods__["sv_coef"] = _svmc.svm_model_sv_coef_set
    __swig_getmethods__["sv_coef"] = _svmc.svm_model_sv_coef_get
    if _newclass:sv_coef = _swig_property(_svmc.svm_model_sv_coef_get, _svmc.svm_model_sv_coef_set)
    __swig_setmethods__["rho"] = _svmc.svm_model_rho_set
    __swig_getmethods__["rho"] = _svmc.svm_model_rho_get
    if _newclass:rho = _swig_property(_svmc.svm_model_rho_get, _svmc.svm_model_rho_set)
    __swig_setmethods__["probA"] = _svmc.svm_model_probA_set
    __swig_getmethods__["probA"] = _svmc.svm_model_probA_get
    if _newclass:probA = _swig_property(_svmc.svm_model_probA_get, _svmc.svm_model_probA_set)
    __swig_setmethods__["probB"] = _svmc.svm_model_probB_set
    __swig_getmethods__["probB"] = _svmc.svm_model_probB_get
    if _newclass:probB = _swig_property(_svmc.svm_model_probB_get, _svmc.svm_model_probB_set)
    __swig_setmethods__["label"] = _svmc.svm_model_label_set
    __swig_getmethods__["label"] = _svmc.svm_model_label_get
    if _newclass:label = _swig_property(_svmc.svm_model_label_get, _svmc.svm_model_label_set)
    __swig_setmethods__["nSV"] = _svmc.svm_model_nSV_set
    __swig_getmethods__["nSV"] = _svmc.svm_model_nSV_get
    if _newclass:nSV = _swig_property(_svmc.svm_model_nSV_get, _svmc.svm_model_nSV_set)
    __swig_setmethods__["free_sv"] = _svmc.svm_model_free_sv_set
    __swig_getmethods__["free_sv"] = _svmc.svm_model_free_sv_get
    if _newclass:free_sv = _swig_property(_svmc.svm_model_free_sv_get, _svmc.svm_model_free_sv_set)
    def __init__(self): 
        this = _svmc.new_svm_model()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _svmc.delete_svm_model
    __del__ = lambda self : None;
svm_model_swigregister = _svmc.svm_model_swigregister
svm_model_swigregister(svm_model)


def svm_set_verbosity(*args):
  return _svmc.svm_set_verbosity(*args)
svm_set_verbosity = _svmc.svm_set_verbosity

def svm_train(*args):
  return _svmc.svm_train(*args)
svm_train = _svmc.svm_train

def svm_cross_validation(*args):
  return _svmc.svm_cross_validation(*args)
svm_cross_validation = _svmc.svm_cross_validation

def svm_save_model(*args):
  return _svmc.svm_save_model(*args)
svm_save_model = _svmc.svm_save_model

def svm_load_model(*args):
  return _svmc.svm_load_model(*args)
svm_load_model = _svmc.svm_load_model

def svm_get_svm_type(*args):
  return _svmc.svm_get_svm_type(*args)
svm_get_svm_type = _svmc.svm_get_svm_type

def svm_get_nr_class(*args):
  return _svmc.svm_get_nr_class(*args)
svm_get_nr_class = _svmc.svm_get_nr_class

def svm_get_labels(*args):
  return _svmc.svm_get_labels(*args)
svm_get_labels = _svmc.svm_get_labels

def svm_get_svr_probability(*args):
  return _svmc.svm_get_svr_probability(*args)
svm_get_svr_probability = _svmc.svm_get_svr_probability

def svm_predict_values(*args):
  return _svmc.svm_predict_values(*args)
svm_predict_values = _svmc.svm_predict_values

def svm_predict(*args):
  return _svmc.svm_predict(*args)
svm_predict = _svmc.svm_predict

def svm_predict_probability(*args):
  return _svmc.svm_predict_probability(*args)
svm_predict_probability = _svmc.svm_predict_probability

def svm_check_parameter(*args):
  return _svmc.svm_check_parameter(*args)
svm_check_parameter = _svmc.svm_check_parameter

def svm_check_probability_model(*args):
  return _svmc.svm_check_probability_model(*args)
svm_check_probability_model = _svmc.svm_check_probability_model

def svm_node_matrix2numpy_array(*args):
  return _svmc.svm_node_matrix2numpy_array(*args)
svm_node_matrix2numpy_array = _svmc.svm_node_matrix2numpy_array

def doubleppcarray2numpy_array(*args):
  return _svmc.doubleppcarray2numpy_array(*args)
doubleppcarray2numpy_array = _svmc.doubleppcarray2numpy_array

def new_int(*args):
  return _svmc.new_int(*args)
new_int = _svmc.new_int

def delete_int(*args):
  return _svmc.delete_int(*args)
delete_int = _svmc.delete_int

def int_getitem(*args):
  return _svmc.int_getitem(*args)
int_getitem = _svmc.int_getitem

def int_setitem(*args):
  return _svmc.int_setitem(*args)
int_setitem = _svmc.int_setitem

def new_double(*args):
  return _svmc.new_double(*args)
new_double = _svmc.new_double

def delete_double(*args):
  return _svmc.delete_double(*args)
delete_double = _svmc.delete_double

def double_getitem(*args):
  return _svmc.double_getitem(*args)
double_getitem = _svmc.double_getitem

def double_setitem(*args):
  return _svmc.double_setitem(*args)
double_setitem = _svmc.double_setitem

def svm_node_array(*args):
  return _svmc.svm_node_array(*args)
svm_node_array = _svmc.svm_node_array

def svm_node_array_destroy(*args):
  return _svmc.svm_node_array_destroy(*args)
svm_node_array_destroy = _svmc.svm_node_array_destroy

def svm_node_matrix(*args):
  return _svmc.svm_node_matrix(*args)
svm_node_matrix = _svmc.svm_node_matrix

def svm_node_matrix_set(*args):
  return _svmc.svm_node_matrix_set(*args)
svm_node_matrix_set = _svmc.svm_node_matrix_set

def svm_node_matrix_destroy(*args):
  return _svmc.svm_node_matrix_destroy(*args)
svm_node_matrix_destroy = _svmc.svm_node_matrix_destroy
# This file is compatible with both classic and new-style classes.


def svm_node_array_set(*args):
  return _svmc.svm_node_array_set(*args)
svm_node_array_set = _svmc.svm_node_array_set

